// backend build.gradle

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		// spring
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE'
		classpath 'org.springframework:springloaded:1.2.6.RELEASE'
    classpath 'com.google.gms:google-services:3.0.0'
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

repositories {
	mavenCentral()
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers('org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8')
	}
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("${buildDir}/classes/main/")
    }
}

jar {
	baseName = 'spring-boot-angular2'
	version = '1.0.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
	dev
}

dependencies {
	// spring boot
	compile 'org.springframework.boot:spring-boot-starter-data-rest:1.5.2.RELEASE'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.5.2.RELEASE'
	compile 'org.springframework.boot:spring-boot-starter-web:1.5.2.RELEASE'
	// spring dev tools
	dev 'org.springframework.boot:spring-boot-devtools:1.5.2.RELEASE'

	// mysql
	compile 'mysql:mysql-connector-java:6.0.5'
	// firebase
	compile 'com.google.firebase:firebase-admin:4.1.3'
	// jjwt
	compile 'io.jsonwebtoken:jjwt:0.7.0'
	// google gson
	compile 'com.google.code.gson:gson:2.8.0'
	// json path
	compile 'com.jayway.jsonpath:json-path:2.2.0'
	// logging
	compile 'org.slf4j:slf4j-api:1.7.24'

	// spring-boot test
	testCompile 'org.springframework.boot:spring-boot-starter-test:1.5.2.RELEASE'
}

// run spring boot app
bootRun {
	//addResources = true
	classpath = sourceSets.main.runtimeClasspath + configurations.dev
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.4'
}
